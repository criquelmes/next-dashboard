"use client";
import { useAppDispatch, useAppSelector } from "@/store";
import { initCounterState } from "@/store/counter/counterSlice";
import { useEffect } from "react";

interface Props {
  value?: number;
}

// Generated by https://quicktype.io
export interface CounterResponse {
  method: string;
  count: number;
}

const getApiCounter = async (): Promise<CounterResponse> => {
  const data = await fetch("/api/counter").then((res) => res.json());
  return data;
};

export const CartCounter = ({ value = 0 }: Props) => {
  const count = useAppSelector((state) => state.counter.count);
  const dispatch = useAppDispatch();

  // useEffect(() => {
  //   dispatch({ type: "counter/initCounterState", payload: value });
  // }, [dispatch, value]);

  // useEffect(() => {
  //   dispatch(setCounter(value))
  // }, [dispatch, value]);

  // useEffect(() => {
  //   getApiCounter().then((res) => {
  //     dispatch({ type: "counter/initCounterState", payload: res.count });
  //   });
  // }, [count, dispatch]);

  useEffect(() => {
    getApiCounter().then(({ count }) => dispatch(initCounterState(count)));
  }, [dispatch]);

  return (
    <>
      <span className="text-9xl">{count}</span>

      <div className="flex">
        <button
          className="flex items-center justify-center p-2 rounded-xl bg-gray-900 text-white hover:bg-gray-600 transition-all w-[100px] ml-1"
          onClick={() => dispatch({ type: "counter/increment" })}
          // onClickCapture={() => dispatch(increment())}
        >
          +1
        </button>
        <button
          className="flex items-center justify-center p-2 rounded-xl bg-gray-900 text-white hover:bg-gray-600 transition-all w-[100px] ml-1"
          onClick={() => dispatch({ type: "counter/decrement" })}
          // onClick={() => dispatch(decrement())}
        >
          -1
        </button>
      </div>
    </>
  );
};
